/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 gaming chair.glb -t 
*/

import * as THREE from 'three'
import type { JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'
import { useLayoutEffect,useRef } from 'react'

type GLTFResult = GLTF & {
  nodes: {
    Group21: THREE.Mesh
    Group20: THREE.Mesh
    Group19: THREE.Mesh
    Group23: THREE.Mesh
    Group22: THREE.Mesh
    Group12: THREE.Mesh
    Group11: THREE.Mesh
    Group10: THREE.Mesh
    Group14: THREE.Mesh
    Group13: THREE.Mesh
    Group5: THREE.Mesh
    Group4: THREE.Mesh
    Group3: THREE.Mesh
    Group7: THREE.Mesh
    Group6: THREE.Mesh
    Group8: THREE.Mesh
    _Group3: THREE.Mesh
    _Group2: THREE.Mesh
    Group35: THREE.Mesh
    _Group5: THREE.Mesh
    _Group4: THREE.Mesh
    Group30: THREE.Mesh
    Group29: THREE.Mesh
    Group28: THREE.Mesh
    Group25: THREE.Mesh
    Group24: THREE.Mesh
    Group26: THREE.Mesh
    Group2: THREE.Mesh
    _Group6: THREE.Mesh
    ZBrush_defualt_group: THREE.Mesh
    _Group8: THREE.Mesh
    _Group7: THREE.Mesh
    Group16: THREE.Mesh
    Group15: THREE.Mesh
    Group18: THREE.Mesh
    Group17: THREE.Mesh
    _Group10: THREE.Mesh
    _Group9: THREE.Mesh
    Group32: THREE.Mesh
    Group31: THREE.Mesh
    Group34: THREE.Mesh
    Group33: THREE.Mesh
    Group61531: THREE.Mesh
  }
  materials: {
    lambert112SG: THREE.MeshStandardMaterial
  }
  animations: THREE.AnimationClip[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials, scene } = useGLTF('/models/gaming chair.glb') as unknown as GLTFResult
  const ref = useRef<THREE.Group>(null)
  useLayoutEffect(() => {
    if (scene) {
      const box = new THREE.Box3().setFromObject(scene);
      const size = new THREE.Vector3();
      box.getSize(size);

      console.log('Model Size:', size); // size will contain x, y, z dimensions
    }
  }, [scene]);

  // useFrame((state, delta) => {
  //   if (ref.current && ref.current.rotation) {
  //     ref.current.rotation.y += delta * 0.5
  //   }
  // })
  return (
    <group ref={ref} {...props} dispose={null}>
      <group position={[16.339, -7.043, 105.163]} scale={287.601}>
        <mesh castShadow receiveShadow  geometry={nodes.Group21.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group20.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group19.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group23.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group22.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group12.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group11.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group10.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group14.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group13.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group5.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group4.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group3.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group7.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group6.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group8.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes._Group3.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes._Group2.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group35.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes._Group5.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes._Group4.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group30.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group29.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group28.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group25.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group24.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group26.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group2.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes._Group6.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.ZBrush_defualt_group.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes._Group8.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes._Group7.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group16.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group15.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group18.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group17.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes._Group10.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes._Group9.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group32.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group31.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group34.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group33.geometry} material={materials.lambert112SG} />
        <mesh castShadow receiveShadow  geometry={nodes.Group61531.geometry} material={materials.lambert112SG} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/gaming chair.glb')
