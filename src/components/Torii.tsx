/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import  { type JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
      ['Node-Mesh']: THREE.Mesh
      ['Node-Mesh_1']: THREE.Mesh
    }
    materials: {
      mat23: THREE.MeshStandardMaterial
      mat14: THREE.MeshStandardMaterial
    }
  }

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./models/Torii.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Node-Mesh'].geometry}
        material={materials.mat23}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Node-Mesh_1'].geometry}
        material={materials.mat14}
      />
    </group>
  )
}

useGLTF.preload('./models/Torii.glb')
