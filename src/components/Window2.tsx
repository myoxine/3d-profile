/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import type { JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'
import { useLayoutEffect } from 'react'

type GLTFResult = GLTF & {
  nodes: {
    Box20179: THREE.Mesh
    Box20180: THREE.Mesh
    Box20181: THREE.Mesh
    Box20182: THREE.Mesh
    Box20183: THREE.Mesh
    Box20184: THREE.Mesh
    Box20185: THREE.Mesh
    Box20186: THREE.Mesh
    Box20187: THREE.Mesh
    Box20188: THREE.Mesh
    Box20189: THREE.Mesh
    Box20190: THREE.Mesh
    Box20191: THREE.Mesh
    Box20192: THREE.Mesh
    Box20193: THREE.Mesh
    Box20194: THREE.Mesh
    Box20195: THREE.Mesh
    Box20196: THREE.Mesh
    Box20197: THREE.Mesh
  }
  materials: {
    ['02___Default']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials,scene } = useGLTF('/models/Window (2).glb') as unknown as GLTFResult;
  console.log(nodes.Box20179)
  useLayoutEffect(() => {
    if (scene) {
        console.log(scene.position)
      const box = new THREE.Box3().setFromObject(scene);
      const size = new THREE.Vector3();
      box.getSize(size);

      console.log('Model Size:', size); // size will contain x, y, z dimensions
    }
  }, [scene]);

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20179.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20180.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20181.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20182.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20183.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20184.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20185.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20186.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20187.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20188.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20189.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20190.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20191.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20192.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20193.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20194.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20195.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20196.geometry}
        material={materials['02___Default']}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box20197.geometry}
        material={materials['02___Default']}
      />
    </group>
  )
}

useGLTF.preload('/models/Window (2).glb')
